@using MudBlazor
@using global::PrimeService.Model.Settings
@using global::PrimeService.Utility.ValidationHelper
@using System.Text.Json
@using global::PrimeService.Model.Settings.Payments
@using global::PrimeService.Model.Settings.Tickets
@using global::PrimeService.Model.Shopping
@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop
@inject ISnackbar Snackbar
@inject IJSRuntime JsRuntime

<MudForm @ref="form" Model="_inputMode">
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.TwoTone.CheckBox" Class="mr-3 mb-n1"/>
                @_title
            </MudText>
        
        </TitleContent>
   
        <DialogContent >
            <MudDivider Style="margin-left:8px; margin-right:8px;"/>
        
            @if (_loading)
            {
                <MudSkeleton Class="my-2"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Circle" Width="50px" Height="50px"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Height="50px"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Height="5px"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Height="50px"/>
                <MudSkeleton Class="my-2"/>
            }
            else
            {
                <MudGrid>
                    <MudItem xs="12" sm="12" md="12">
                        <MudTextField Disabled="@_isReadOnly"
                                      Label="What Action to be performed?"
                                      Placeholder="Task Name"
                                      Adornment="Adornment.End"
                                      AdornmentIcon="@Icons.TwoTone.AddCircle"
                                      @bind-Value="_inputMode.Title"
                                      For="@(() => _inputMode.Title)"
                                      Immediate="true"/>
                    </MudItem>
                    <MudItem xs="12" sm="12" md="12">
                        <MudAutocomplete T="Employee" Label="Assigned To"
                                         Disabled="@_isReadOnly"
                                         @bind-Value="_inputMode.AssignedTo"
                                         OpenIcon="@Icons.Material.TwoTone.Search"
                                         ToStringFunc="@(e => e == null ? null : $"{e.User.Name}")"
                                         SearchFunc="@Employee_SearchAsync" Immediate="true" Required="true"
                                         RequiredError="Assigned To" ResetValueOnEmptyText="false"
                                         CloseIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Tertiary"/>
                    </MudItem>
                    <MudItem xs="12" sm="12" md="12">
                        <MudDatePicker Label="Target Date"
                                       PickerVariant="PickerVariant.Dialog"
                                       DisableToolbar="true"
                                       @bind-Date="_inputMode.TargetDate"/>
                    </MudItem>
                    
                </MudGrid>
            }
        
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled"
                       StartIcon="@Icons.Filled.Input"
                       Color="Color.Primary" DisableElevation="true"
                       OnClick="@(async () => await Submit())">
                @if (_processing)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                    <MudText Class="ms-2">Processing</MudText>
                }
                else
                {
                    <MudText>Add Task</MudText>
                }
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Warning" 
                       StartIcon="@Icons.Outlined.Cancel"
                       OnClick="Cancel">Cancel</MudButton>
            
            @if (_appSettings.IsDev)
            {
                <MudButton Variant="Variant.Filled"
                           Color="Color.Warning" DisableElevation="true"
                           OnClick="GetFakeData" Class="mx-2">Fake It</MudButton>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Secondary" DisableElevation="true"
                           OnClick="@(() => form.Reset())" Class="mx-2">Reset</MudButton>
                <MudButton Variant="Variant.Filled"
                           DisableElevation="true"
                           OnClick="@(() => form.ResetValidation())">Reset Validation</MudButton>
            }
            
        </DialogActions>
    </MudDialog>
</MudForm>
   


