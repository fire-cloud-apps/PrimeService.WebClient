@using MudBlazor
@using global::PrimeService.Model.Settings
@using global::PrimeService.Utility.ValidationHelper
@using System.Text.Json
@inject ISnackbar Snackbar

<MudForm @ref="form" Model="_inputMode" @bind-IsValid="@success"
         @bind-Errors="@errors">
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.TwoTone.StickyNote2" Class="mr-3 mb-n1"/>
                @_title
            </MudText>
        </TitleContent>
        <DialogContent>
            @if (_loading)
            {
                <MudSkeleton Class="my-2"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Circle" Width="50px" Height="50px"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Height="50px"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Height="5px"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Height="50px"/>
                <MudSkeleton Class="my-2"/>
            }
            else
            {
                <MudGrid>
                    <MudItem xs="12" sm="12" md="12">
                        <MudNumericField Disabled="@_isReadOnly" Label="Quantity" 
                                         AdornmentIcon="@Icons.Material.TwoTone.CurrencyRupee"
                                         HelperText="Max. 1000 characters."
                                         PlaceHolder="Add the stock"
                                         @bind-Value="_inputMode.Quantity"
                                         For="@(() => _inputMode.Quantity)"
                                         MaxLength="4"
                                         Min="0"
                                         Max="9999"
                                         Immediate="true" />
                    </MudItem>
                    
                    <MudItem xs="12" sm="12" md="12">
                        <MudNumericField Disabled="@_isReadOnly" Label="Additional Cost" 
                                         Placeholder="Additional Cost if any"
                                         AdornmentIcon="@Icons.Material.TwoTone.CurrencyRupee"
                                         HelperText="Max 5 Character Allowed"
                                         @bind-Value="_inputMode.Price"
                                         For="@(() => _inputMode.Price)"
                                         MaxLength="5"
                                         Min="0"
                                         Max="99999"
                                         Immediate="true" />
                    </MudItem>
                </MudGrid>
            }
        </DialogContent>
        <DialogActions>
        
            <MudButton Variant="Variant.Filled"
                       StartIcon="@Icons.Filled.Input"
                       Color="Color.Primary" DisableElevation="true"
                       OnClick="@(async () => await Submit())">
                @if (_processing)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                    <MudText Class="ms-2">Processing</MudText>
                }
                else
                {
                    <MudText>Save</MudText>
                }
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Warning" 
                       StartIcon="@Icons.Outlined.Cancel"
                       OnClick="Cancel">Cancel</MudButton>
            
            @if (_appSettings.IsDev)
            {
                @* <MudButton Variant="Variant.Filled" *@
                @*            Color="Color.Warning" DisableElevation="true" *@
                @*            OnClick="GetFakeData" Class="mx-2">Fake It</MudButton> *@
                @* <MudButton Variant="Variant.Filled" *@
                @*            Color="Color.Secondary" DisableElevation="true" *@
                @*            OnClick="@(() => form.Reset())" Class="mx-2">Reset</MudButton> *@
                @* <MudButton Variant="Variant.Filled" *@
                @*            DisableElevation="true" *@
                @*            OnClick="@(() => form.ResetValidation())">Reset Validation</MudButton> *@
            }
            
        </DialogActions>
    </MudDialog>
</MudForm>